apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.littleant.carrepair"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "arm64-v8a", "x86_64"
//            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","arm64-v8a","x86_64"
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "52b368c955e53792d3680657", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //定义一个文件
//            outputFileName = "${variant.name}-${variant.versionName}.apk"
//            def outputFile = output.outputFile
            //定义存储apk的位置和文件名，这里文件名格式定义为 [applicationId_版本号_ReleaseTime_apk]
            if (outputFileName != null && outputFileName.contains("release") && outputFileName.endsWith('.apk')) {

                outputFileName = "${variant.applicationId}_${variant.versionCode}_${variant.versionName}_${getReleaseTime()}_release.apk"

            } else if (outputFile != null && outputFile.name.contains("debug") && outputFile.name.endsWith('.apk')) {

                outputFileName = "${variant.applicationId}_${variant.versionCode}_${variant.versionName}_${getReleaseTime()}_debug.apk"
            }
        }
    }

    signingConfigs {//签名的配置
        release {
            storeFile file('../CarRepair.jks') //正式签名，以后使用
            storePassword 'littleant'
            keyAlias 'key0'
            keyPassword 'littleant'
        }
        debug {
            storeFile file('../CarRepair.jks')
            storePassword 'littleant'
            keyAlias 'key0'
            keyPassword 'littleant'
        }
    }

    buildTypes {
        release {
//            multiDexEnabled true //Add this
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.amap.api:navi-3dmap:latest.integration'
    implementation 'com.amap.api:location:latest.integration'
    implementation 'com.amap.api:search:latest.integration'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.xingliuhua:xlhratingbar_lib:1.0.1'
    implementation 'com.github.fodroid:XRadioGroup:v1.1'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.zhihu.android:matisse:0.5.1'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'cn.jiguang.sdk:jpush:3.1.6'
    implementation 'cn.jiguang.sdk:jcore:1.2.5'  // 此处以JCore 1.2.5 版本为例。
//    implementation 'liji.library.dev:citypickerview:3.1.12'
    implementation(name: 'CircleImageView-release', ext: 'aar')
    implementation(name: 'citypickerview-release', ext: 'aar')
    implementation project(':SelectPlace')
    implementation project(':UtilsCore')
}

def getReleaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getDefault())
}
